{"version":3,"sources":["components/Header.js","components/Footer.js","components/List.js","components/ToDos.js","App.js","index.js"],"names":["Header","className","Footer","year","Date","getFullYear","List","props","useState","userInput","setUserInput","onSubmit","e","preventDefault","length","setList","prevState","id","uuidv4","title","trim","done","type","placeholder","value","onChange","target","ToDos","userTodos","list","map","toDo","i","defaultChecked","check","onClick","console","log","remove","App","Fragment","itemToRemove","newArr","filter","item","itemToCheck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAQeA,EARA,WACb,OACE,qBAAKC,UAAU,OAAf,SACE,2CCQSC,EAXA,WACb,IAAIC,GAAO,IAAIC,MAAOC,cACtB,OACE,qBAAKJ,UAAU,SAAf,SACE,2CACY,uCADZ,IAC0BE,EAAM,U,eCgCvBG,EAlCF,SAACC,GAGZ,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OACE,uBAAMC,SAbR,SAAsBC,GACpBA,EAAEC,iBAGEJ,EAAUK,SACZP,EAAMQ,SAAQ,SAACC,GAAD,4BACTA,GADS,CAEZ,CAAEC,GAAIC,cAAUC,MAAOV,EAAUW,OAAQC,MAAM,QAEjDX,EAAa,MAIf,UACE,uBACET,UAAU,QACVqB,KAAK,OACLC,YAAY,uBACZC,MAAOf,EACPgB,SAvBN,SAAsBb,GAEpBF,EAAaE,EAAEc,OAAOF,UAuBpB,uBAAOvB,UAAU,SAASqB,KAAK,SAASE,MAAM,oBCTrCG,EAvBD,SAACpB,GACb,IAAMqB,EAAYrB,EAAMsB,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAC/B,+BACE,uBACE/B,UAAU,WACVqB,KAAK,WACLW,eAAgBF,EAAKV,KACrBI,SAAU,kBAAMlB,EAAM2B,MAAMH,EAAKd,OAElCc,EAAKZ,MACN,mBACEgB,QAAS,WACPC,QAAQC,IAAIN,EAAKd,IACjBV,EAAM+B,OAAOP,EAAKd,KAHtB,sBAROe,MAkBX,OAAO,6BAAKJ,KCaCW,MA3Bf,WACE,MAAwB/B,mBAAS,IAAjC,mBAAOqB,EAAP,KAAad,EAAb,KAgBA,OACE,eAAC,IAAMyB,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMzB,QAASA,IACf,cAAC,EAAD,CAAOc,KAAMA,EAAMS,OAnBR,SAACG,GAEd,IAAMC,EAASb,EAAKc,QAAO,SAACC,GAAD,OAAUA,EAAK3B,KAAOwB,KACjD1B,EAAQ2B,IAgB6BR,MAdzB,SAACW,GAEb9B,GAAQ,SAACC,GACP,OAAOA,EAAU2B,QAAO,SAACC,GAEvB,OADIA,EAAK3B,KAAO4B,IAAaD,EAAKvB,MAAQuB,EAAKvB,MACxCuB,WAUT,cAAC,EAAD,Q,MCtBNE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.84dfae3d.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <div className=\"note\">\n      <h1>ToDo's</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","const Footer = () => {\n  let year = new Date().getFullYear();\n  return (\n    <div className=\"footer\">\n      <p>\n        Copyrights<sup>®</sup> {year}{\" \"}\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst List = (props) => {\n  // console.log(props);\n  // console.log(props.setList);\n  const [userInput, setUserInput] = useState(\"\");\n  function changeHandle(e) {\n    // console.log(e.target.value);\n    setUserInput(e.target.value);\n  }\n  function submitHandle(e) {\n    e.preventDefault();\n    // prevState holds on the value of state before any update on the state\n\n    if (userInput.length) {\n      props.setList((prevState) => [\n        ...prevState,\n        { id: uuidv4(), title: userInput.trim(), done: false },\n      ]);\n      setUserInput(\"\");\n    }\n  }\n  return (\n    <form onSubmit={submitHandle}>\n      <input\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Write your ToDo here\"\n        value={userInput}\n        onChange={changeHandle}\n      />\n      <input className=\"button\" type=\"submit\" value=\"Add To List\" />\n    </form>\n  );\n};\n\nexport default List;\n","const ToDos = (props) => {\n  const userTodos = props.list.map((toDo, i) => (\n    <li key={i}>\n      <input\n        className=\"checkbox\"\n        type=\"checkbox\"\n        defaultChecked={toDo.done}\n        onChange={() => props.check(toDo.id)}\n      />\n      {toDo.title}\n      <i\n        onClick={() => {\n          console.log(toDo.id);\n          props.remove(toDo.id);\n        }}\n      >\n        ✗\n      </i>\n    </li>\n  ));\n  return <ul>{userTodos}</ul>;\n};\n\nexport default ToDos;\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport List from \"./components/List\";\nimport ToDos from \"./components/ToDos\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const remove = (itemToRemove) => {\n    // itemToRemove has the id for that specific item\n    const newArr = list.filter((item) => item.id !== itemToRemove);\n    setList(newArr);\n  };\n  const check = (itemToCheck) => {\n    // itemToCheck has the id for that specific item\n    setList((prevState) => {\n      return prevState.filter((item) => {\n        if (item.id === itemToCheck) item.done = !item.done;\n        return item;\n      });\n    });\n  };\n  // React Fragments allow you to wrap multiple elements without adding an extra node to the DOM. This can be useful when rendering multiple child elements/components in a single parent component.\n  return (\n    <React.Fragment>\n      <Header />\n      <List setList={setList} />\n      <ToDos list={list} remove={remove} check={check} />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./sass/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}